"""Add TaskList

Revision ID: dead9d89afac
Revises: 9b3d9aab719d
Create Date: 2024-02-19 02:46:08.273089

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'dead9d89afac'
down_revision: Union[str, None] = '9b3d9aab719d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('taskList',
    sa.Column('id', mysql.TEXT(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.alter_column('users', 'displayname',
               existing_type=sa.VARCHAR(length=30),
               type_=mysql.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'photoIcon',
               existing_type=sa.VARCHAR(length=500),
               type_=mysql.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'refleshToken',
               existing_type=sa.VARCHAR(length=500),
               type_=mysql.TEXT(),
               existing_nullable=True)
    op.create_unique_constraint(None, 'users', ['localId'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'refleshToken',
               existing_type=mysql.TEXT(),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
    op.alter_column('users', 'photoIcon',
               existing_type=mysql.TEXT(),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
    op.alter_column('users', 'displayname',
               existing_type=mysql.TEXT(),
               type_=sa.VARCHAR(length=30),
               existing_nullable=True)
    op.drop_table('taskList')
    # ### end Alembic commands ###
