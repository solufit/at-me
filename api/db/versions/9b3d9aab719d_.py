"""empty message

Revision ID: 9b3d9aab719d
Revises: 
Create Date: 2024-02-17 12:37:24.687969

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9b3d9aab719d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('calendar',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('starttime', sa.TIMESTAMP(), nullable=False),
    sa.Column('endtime', sa.TIMESTAMP(), nullable=False),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('localID', sa.Text(), nullable=True),
    sa.Column('calID', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('localId', sa.String(length=25), nullable=False),
    sa.Column('email', sa.String(length=30), nullable=True),
    sa.Column('displayname', sa.String(length=30), nullable=True),
    sa.Column('photoIcon', sa.String(length=500), nullable=True),
    sa.Column('refleshToken', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('localId'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('localId')
    )
    op.create_table('worktimeDate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('targetDate', sa.Date(), nullable=False),
    sa.Column('worktimeStart', sa.Time(), nullable=False),
    sa.Column('worktimeEnd', sa.Time(), nullable=False),
    sa.Column('localID', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('worktimeWeek',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('worktimeStart', sa.Time(), nullable=False),
    sa.Column('worktimeEnd', sa.Time(), nullable=False),
    sa.Column('localID', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('worktimeweek')
    op.drop_table('worktimedate')
    op.drop_table('user_table')
    op.add_column('tasks', sa.Column('localId', sa.String(length=25), nullable=True))
    op.add_column('tasks', sa.Column('duetime', sa.TIMESTAMP(), nullable=True))
    op.add_column('tasks', sa.Column('description', mysql.TEXT(), nullable=True))
    op.alter_column('tasks', 'id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=25),
               nullable=False)
    op.alter_column('tasks', 'kind',
               existing_type=sa.TEXT(),
               type_=sa.String(length=25),
               existing_nullable=True)
    op.create_unique_constraint(None, 'tasks', ['id'])
    op.drop_column('tasks', 'selflink')
    op.drop_column('tasks', 'note')
    op.drop_column('tasks', 'localid')
    op.drop_column('tasks', 'due')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tasks', sa.Column('due', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('tasks', sa.Column('localid', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('tasks', sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('tasks', sa.Column('selflink', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'tasks', type_='unique')
    op.alter_column('tasks', 'kind',
               existing_type=sa.String(length=25),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('tasks', 'id',
               existing_type=sa.String(length=25),
               type_=sa.TEXT(),
               nullable=True)
    op.drop_column('tasks', 'description')
    op.drop_column('tasks', 'duetime')
    op.drop_column('tasks', 'localId')
    op.create_table('user_table',
    sa.Column('localid', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('email', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('displayname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('photourl', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('refleshtoken', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('worktimedate',
    sa.Column('targetdate', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('worktimestart', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('worktimeend', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('localid', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('worktimeweek',
    sa.Column('worktimestart', postgresql.ARRAY(postgresql.TIME()), autoincrement=False, nullable=True),
    sa.Column('worktimeend', postgresql.ARRAY(postgresql.TIME()), autoincrement=False, nullable=True),
    sa.Column('localid', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.drop_table('worktimeWeek')
    op.drop_table('worktimeDate')
    op.drop_table('users')
    op.drop_table('calendar')
    # ### end Alembic commands ###
